AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'sam-app--final-assignment

  Sample SAM Template for sam-app-final-assignment

  '
Globals:
  Function:
    Timeout: 3
Parameters:
  SamTableName:
    Type: String
    Description: the name of the dynamodb table
    Default: saikat_final_table
Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    Description: Creating S3 bucket from CloudFormation
    Properties:
      BucketName: saikats3bucketfinalassignment
  TestSamTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName:
        Ref: SamTableName
      AttributeDefinitions:
      - AttributeName: pk
        AttributeType: S
      - AttributeName: sk
        AttributeType: S
      - AttributeName: gsipk
        AttributeType: S
      - AttributeName: gsisk
        AttributeType: S
      KeySchema:
      - AttributeName: pk
        KeyType: HASH
      - AttributeName: sk
        KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      GlobalSecondaryIndexes:
      - IndexName: gsi_index
        KeySchema:
        - AttributeName: gsipk
          KeyType: HASH
        - AttributeName: gsisk
          KeyType: RANGE
        Projection:
          ProjectionType: ALL
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
  s3Permission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Fn::GetAtt:
        - HelloWorldFunction
        - Arn
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceAccount:
        Ref: AWS::AccountId
      SourceArn:
        Fn::GetAtt:
        - S3Bucket
        - Arn
  HelloWorldFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: HelloWorldFunction
      Handler: app.lambda_handler
      Runtime: python3.8
      Policies: AmazonDynamoDBFullAccess
      Environment:
        Variables:
          AppTable:
            Ref: SamTableName
          IndexName: gsi_index
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /hello
            Method: post
  MyDynamoDBStreamProcessor:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: MyDynamoDBStreamProcessor
      Handler: dynamo-stream-processor.lambda_handler
      Runtime: python3.8
      Policies: AWSLambdaDynamoDBExecutionRole
      Environment:
        Variables:
          AppTable:
            Ref: SamTableName
          IndexName: gsi_index
Outputs:
  HelloWorldApi:
    Description: API Gateway endpoint URL for Prod stage for Hello World function
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/
  HelloWorldFunction:
    Description: Hello World Lambda Function ARN
    Value:
      Fn::GetAtt:
      - HelloWorldFunction
      - Arn
  HelloWorldFunctionIamRole:
    Description: Implicit IAM Role created for Hello World function
    Value:
      Fn::GetAtt:
      - HelloWorldFunctionRole
      - Arn
